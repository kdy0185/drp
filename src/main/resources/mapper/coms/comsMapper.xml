<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jsplan.drp.cmmn.obj.ComsMapper">

	<!-- 페이징 설정 -->
	<sql id="paginationHeader">
		SELECT *
			FROM (
	</sql>
	<sql id="paginationFooter">
			) DATA
		WHERE RN BETWEEN #{startIndex} AND #{endIndex}
	</sql>

	<!-- 메뉴 목록 -->
	<select id="selectComsMenuList" resultType="comsMenuVO">
		WITH TREE_MENU
					 AS (SELECT MENU_CD,
											UPPER_MENU_CD,
											MENU_NM,
											MENU_URL,
											MENU_LV,
											MENU_ORD,
											USE_YN,
											CONVERT(VARCHAR, MENU_ORD) LOW_MENU_ORD
							 FROM SYS_DRP_MENU
							 WHERE UPPER_MENU_CD IS NULL
							 UNION ALL
							 SELECT V.MENU_CD,
											V.UPPER_MENU_CD,
											V.MENU_NM,
											V.MENU_URL,
											V.MENU_LV,
											V.MENU_ORD,
											V.USE_YN,
											CONVERT(VARCHAR, CONVERT(VARCHAR, T.LOW_MENU_ORD) + '0'
												+ CONVERT(VARCHAR, V.MENU_ORD)) LOW_MENU_ORD
							 FROM SYS_DRP_MENU V
											INNER JOIN TREE_MENU T
																 ON V.UPPER_MENU_CD = T.MENU_CD)
		SELECT A.MENU_CD       menuCd,
					 A.UPPER_MENU_CD upperMenuCd,
					 A.MENU_NM       menuNm,
					 A.MENU_URL      menuUrl,
					 A.MENU_LV       menuLv,
					 A.LAST_YN       lastYn,
					 B.AUTH_CD       authCd
		FROM (SELECT MENU_CD,
								 UPPER_MENU_CD,
								 MENU_NM,
								 MENU_URL,
								 MENU_LV,
								 MENU_ORD,
								 LOW_MENU_ORD,
								 USE_YN,
								 CASE
									 WHEN MENU_CD IN (SELECT DISTINCT UPPER_MENU_CD
																		FROM TREE_MENU
																		WHERE MENU_LV = M.MENU_LV + 1) THEN 'N'
									 ELSE 'Y'
									 END LAST_YN
					FROM TREE_MENU M) A
					 INNER JOIN (SELECT DISTINCT MENU_CD,
																			 LTRIM(STUFF((SELECT ', ' + QUOTENAME(AUTH_CD, '''')
																										FROM SYS_DRP_MENU_AUTH
																										WHERE MENU_CD = N.MENU_CD
																				 FOR XML PATH ('')), 1, 1, '')) AUTH_CD
											 FROM SYS_DRP_MENU_AUTH N) B
											ON A.MENU_CD = B.MENU_CD
		WHERE A.USE_YN = 'Y'
		ORDER BY A.LOW_MENU_ORD
	</select>

	<!-- 메뉴 상세 -->
	<select id="selectComsMenuDetail" resultType="comsMenuVO">
		SELECT MENU_CD                            menuCd,
		       MENU_NM                            menuNm,
		       MENU_ENG_NM                        menuEngNm,
		       UPPER_MENU_CD                      upperMenuCd,
		       (SELECT MENU_NM
		        FROM   SYS_DRP_MENU
		        WHERE  MENU_CD = A.UPPER_MENU_CD) upperMenuNm,
		       MENU_LV                            menuLv
		FROM   SYS_DRP_MENU A
		WHERE  MENU_CD = #{menuCd}
	</select>

	<!-- URL별 권한 목록 -->
	<select id="selectComsUrlAuthList" resultType="comsMenuVO">
		SELECT A.MENU_URL menuUrl,
		       B.AUTH_CD  authCd
		FROM   (SELECT MENU_CD,
		               MENU_URL,
		               MENU_LV
		        FROM   SYS_DRP_MENU) A
		       INNER JOIN (SELECT MENU_CD,
		                          AUTH_CD
		                   FROM   SYS_DRP_MENU_AUTH) B
		               ON A.MENU_CD = B.MENU_CD
		ORDER  BY A.MENU_LV DESC
	</select>

	<!-- 계층화 권한 목록 -->
	<select id="selectHierarchicalAuthList" resultType="comsMenuVO">
		SELECT AUTH_CD       authCd,
		       UPPER_AUTH_CD upperAuthCd
		FROM   SYS_DRP_AUTH
		WHERE  1 = 1
		       AND USE_YN = 'Y'
		       AND UPPER_AUTH_CD IS NOT NULL
	</select>

	<!-- 공통 코드 목록 -->
	<select id="selectComsCodeList" resultType="comsVO">
		SELECT COM_CD comCd,
		       COM_NM comNm,
		       DETL detl
		FROM   SYS_COM_CODE
		WHERE  1 = 1
		       AND USE_YN = 'Y'
		       AND GRP_CD = #{grpCd}
		ORDER  BY ORD
	</select>

	<!-- 그룹 목록 -->
	<select id="selectComsGrpList" resultType="comsVO">
		SELECT GRP_CD grpCd,
					 GRP_NM grpNm
		FROM SYS_DRP_GRP
		ORDER BY GRP_NM
	</select>

	<!-- 담당자 목록 -->
	<select id="selectComsUserList" resultType="comsVO">
		SELECT ROW_NUMBER() OVER(ORDER BY B.USER_NM) rn,
		       A.GRP_CD               				 grpCd,
		       A.GRP_NM               				 grpNm,
		       B.USER_ID              				 userId,
		       B.USER_NM              				 userNm
		FROM   (SELECT GRP_CD, GRP_NM
		        FROM   SYS_DRP_GRP) A
		       INNER JOIN (SELECT GRP_CD, USER_ID, USER_NM
		                   FROM   SYS_DRP_USER) B
		               ON A.GRP_CD = B.GRP_CD
		WHERE  1 = 1
			<if test="searchWord != null and searchWord != ''">
				<if test="searchCd == 'userId'">
					AND LTRIM(RTRIM(REPLACE(UPPER(B.USER_ID), ' ', ''))) LIKE '%' + LTRIM(RTRIM(REPLACE(UPPER(#{searchWord}), ' ', ''))) + '%'
				</if>
				<if test="searchCd == 'userNm'">
					AND LTRIM(RTRIM(REPLACE(UPPER(B.USER_NM), ' ', ''))) LIKE '%' + LTRIM(RTRIM(REPLACE(UPPER(#{searchWord}), ' ', ''))) + '%'
				</if>
			</if>
			<if test="grpCd != null and grpCd != ''">
				AND A.GRP_CD = #{grpCd}
			</if>
	</select>
</mapper>
