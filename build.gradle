buildscript {
    ext {
        queryDslVersion = '5.0.0'
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.jsplan'
version = '0.4.0-RC'
sourceCompatibility = '11'
apply plugin: 'war'

// plain war 생성 X
war {
    enabled = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.security:spring-security-taglibs'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.1'
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    implementation 'org.apache.poi:poi:3.14'
    implementation 'org.apache.poi:poi-ooxml:3.14'
    implementation 'org.apache.poi:poi-ooxml-schemas:3.14'
    implementation 'javax.servlet:jstl'
    implementation 'net.sf.json-lib:json-lib:2.4:jdk15'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

    compileOnly 'org.apache.tomcat.embed:tomcat-embed-jasper'
    compileOnly 'org.springframework.boot:spring-boot-starter-tomcat'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// QueryDSL 추가 : S
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
// QueryDSL 추가 : E
